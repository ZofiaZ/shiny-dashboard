/* All media-queries should use em values, 
  as we want a consistent scaling for zoom and increased browser font-size functionalities.
  Due to Safari bugs rem's cannot be used */
@mixin mediaFrom($breakpoint) {
  @if $breakpoint {
    @media only screen and (min-width: em($breakpoint)) {
      @content;
    }
  }
}

@mixin outerContainer {
  max-width: $maxContentWidth;
  margin-left: auto;
  margin-right: auto;
  padding-left: rem(15px);
  padding-right: rem(15px);

  @include mediaFrom($breakMd) {
    padding-left: rem(25px);
    padding-right: rem(25px);
  }

  @include mediaFrom($breakXl) {
    padding-left: rem(50px);
    padding-right: rem(50px);
  }
}

@mixin gridWidth($mobileWidth: "", $tabletWidth: "", $desktopWidth: "") {
  // example usage for a component in a 12 column container:
  // @include gridWidth(12/12, 8/12, 6/12);

  @if $mobileWidth != "" {
    width: calc(100% * #{$mobileWidth} - #{$gutterXs});
  }

  @if $tabletWidth != "" {
    @include mediaFrom($breakSm) {
      width: calc(100% * #{$tabletWidth} - #{$gutterXs});
    }
  }

  @if $desktopWidth != "" {
    @include mediaFrom($breakMd) {
      width: calc(100% * #{$desktopWidth} - #{$gutterLg});
    }
  }
}

@mixin tile {
  background: $white;
  box-shadow: $boxShadow;
  flex-grow: 1;
  padding: $spacingSm;
  margin: $gutterXs / 2;

  @include mediaFrom($breakSm) {
    padding: $spacingMd;
  }
}
